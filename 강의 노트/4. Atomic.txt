Atomic

멀티스레드에서 공유데이터 사용시 생기는 문제점
공유데이터 1개 만들어서 실험해보자

그러면 우리가 예상한 것과 다른 결과가 나오며 실행할 때마다 다른 결과가 나온다

여기서 atomic의 개념을 도입
 ㄴ All - Of - Nothing -> 다 실행이 완료되었거나 , 아예 시작을 안한 상태만 존재.

c++ 에선 atomic이라는 헤더를 추가하면 되는데
활용할 데이를 atomic<int> sum = 0; 이런식

어러면 위 상황이 해결되는데 어떻게 해결이 되냐
사실 어떤 스레드가 작업을 하는 중에 다른 스레드가 해당 데이터에 작업을 하려고 한다면
대기열에 들어가서 작업이 끝날 때 까지 대기를 하게된다.

그러면 멀티스레드 환경에서는 atomic으로 무조건 연산하면 끝 아니냐 하는데
 ㄴ 기존 연산보다 많이 느리다
 막 사용해서는 안된다.